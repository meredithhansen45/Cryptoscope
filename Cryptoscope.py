import requests
import time
import datetime
import json
from collections import defaultdict
from statistics import mean, stdev

ETHERSCAN_API_KEY = 'YourAPIKeyHere'
BASE_URL = 'https://api.etherscan.io/api'

# –ö—ç—à –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –∫–æ—à–µ–ª—å–∫–æ–≤
wallet_history = defaultdict(list)

def get_wallet_tx(wallet, startblock=0):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞"""
    url = f"{BASE_URL}?module=account&action=txlist&address={wallet}&startblock={startblock}&sort=asc&apikey={ETHERSCAN_API_KEY}"
    r = requests.get(url)
    data = r.json()
    if data["status"] != "1":
        return []
    return data["result"]

def detect_anomalies(wallet, tx_list):
    """–í—ã—è–≤–ª–µ–Ω–∏–µ –∞–Ω–æ–º–∞–ª–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    if len(tx_list) < 5:
        return None  # –ú–∞–ª–æ –¥–∞–Ω–Ω—ã—Ö

    times = [int(tx["timeStamp"]) for tx in tx_list]
    diffs = [j - i for i, j in zip(times[:-1], times[1:])]
    
    avg_diff = mean(diffs)
    std_diff = stdev(diffs) if len(diffs) > 1 else 0

    # –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    last_diff = int(time.time()) - times[-1]

    # –ê–Ω–æ–º–∞–ª–∏—è: –¥–æ–ª–≥–æ —Å–ø–∞–ª, –≤–Ω–µ–∑–∞–ø–Ω–æ –∞–∫—Ç–∏–≤–µ–Ω
    if last_diff < avg_diff - 2 * std_diff:
        return f"üìà –í–Ω–µ–∑–∞–ø–Ω–æ–µ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞ {wallet}"

    # –ê–Ω–æ–º–∞–ª–∏—è: —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç
    if std_diff < 60 and avg_diff < 120:
        return f"üí∏ –ß–∞—Å—Ç—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ ‚Äî –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —É {wallet}"

    return None

def analyze_wallet(wallet):
    txs = get_wallet_tx(wallet)
    wallet_history[wallet].append(txs)
    result = detect_anomalies(wallet, txs)
    if result:
        print(f"[{datetime.datetime.now()}] {result}")

def main():
    watchlist = [
        "0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe",  # –ü—Ä–∏–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞
        "0x742d35Cc6634C0532925a3b844Bc454e4438f44e"
    ]

    print("üß™ Cryptoscope ‚Äî –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –∫—Ä–∏–ø—Ç–æ–∞–Ω–æ–º–∞–ª–∏–π")

    while True:
        for wallet in watchlist:
            try:
                analyze_wallet(wallet)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ —Å {wallet}: {e}")
        time.sleep(300)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ü–∏–∫–ª–∞–º–∏ ‚Äî 5 –º–∏–Ω—É—Ç

if __name__ == "__main__":
    main()
